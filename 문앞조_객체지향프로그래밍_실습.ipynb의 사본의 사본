{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Zde2iUVMKfcVisF8F99LgUvg-h18TIXs","timestamp":1701042199372}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 0. 일반회원, 프렌즈, 퍼플만 구현(2시 50분까지)"],"metadata":{"id":"u9Z61EDBBwZ0"}},{"cell_type":"markdown","source":["<img src=\"https://mblogthumb-phinf.pstatic.net/MjAyMDAzMjhfMTc2/MDAxNTg1Mzc3MTY1NTU1.ziX2BsC1YDb_sX561-ZSJl907fhbSudWXjf2qulcw5og.hl2xTYHPDL1nuxClt5h-2XZuz5zTDfFvrFdrLY549wsg.PNG.sexysbkang/%EB%A7%88%EC%BC%93%EC%BB%AC%EB%A6%AC_%EB%93%B1%EA%B8%89.png?type=w800\">\n"],"metadata":{"id":"t8gHdlAmYzJr"}},{"cell_type":"code","source":[],"metadata":{"id":"K06AmhSgy3Ak"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 4명이 1조로 실습\n","\n","1. 일련번호, 상품명, 수량, 가격을 속성으로 가지는 Product 클래스를 구현해보세요. (일련번호는 자동 입력됨)\n","```\n","새우깡 = Product('새우깡', 3, 1500)\n","```\n","가장 기본적인 기능이나 속성은 무엇인지 생각해보세요\n","\n","2. 마켓컬리의 회원등급 목록을 참조하셔서 class Plain, Friends, Purple 클래스를 구현해보세요.\n","    - Plain 클래스에는 buy(상품명, 수량)이라는 인스턴스 메소드가 있으며,\n","    - 이 메소드는 자료형이 Product(isinstance 활용)인 상품은 구매할 수 있고,\n","    - 자료형이 Product가 아닌 상품은 '바코드를 읽을 수 없습니다.'라는 에러메시지를 리턴합니다.\n","\n","3. Product와 회원 클래스를 이용하여 만들 수 있는 또다른 메소드를 하나 고안해 보세요.\n","\n","- 혜택금액은 무시하셔도 됩니다\n"],"metadata":{"id":"U4TcuJLwB0BU"}},{"cell_type":"markdown","source":["```\n","4명이 1장의 노트북파일을 작성해 구글드라이브 안에 저장해주세요\n","\n","코드리뷰 시간을 갖겠습니다. (각팀 발표 10분)\n","\n","일반회원 - 적립률만\n","프렌즈 - 할인쿠폰도\n","퍼플 - 더블 후기 적립금까지\n","\n","```"],"metadata":{"id":"oxw-pt4Fmdo_"}},{"cell_type":"markdown","source":["- Product 클래스\n","    - 시리얼 넘버 상품 추가할때마다 자동으로 증가\n","    - 이름 / 양 / 가격 저장\n","\n","- Member 클래스\n","    - 맴버 이름\n","    - 맴버 적립금\n","    - 회원 목록 확인\n","\n","- Plain 클래스\n","    - 멤버 등급\n","    - 전월 실적\n","    - 적립 비율\n","    - 쿠폰 가치\n","    - 쿠폰 개수\n","    - buy 인스턴스 매서드 -> 구매\n","        - 쿠폰 사용할지\n","            - 쿠폰이 있는 경우\n","            - 쿠폰 사용이 가능한지?\n","- Friend 클래스\n","    - Plain 상속받음\n","    - 쿠폰 개수 가치\n","    - 상속 이유:\n","        - Plain 클래스의 기본 구매 로직(buy)을 재사용하면서, Friends 등급만의 특징인 쿠폰 개수와 할인 금액을 추가\n","        \n","- Purple 클래스\n","    - Friend 클래스 상속\n","    - 추가 혜택 추가\n","    - 리뷰 남기면 더블 적립을 해줌\n","\n","    \n"],"metadata":{"id":"AfuX1fKnpDf6"}},{"cell_type":"code","source":["class Product:\n","    next_id = 1  # 상품 ID\n","    serial_reg = {} # ID 저장소\n","    name = ''\n","    quantity = 0\n","    price = 0\n","\n","    def __init__(self, name, quantity, price):\n","        self.id = Product.next_id\n","        Product.next_id += 1\n","        self.name = name # 상품명\n","        self.quantity = quantity # 재고 수량\n","        self.price = price # 가격\n","        Product.serial_reg[self.id] = self\n","\n","\n","    def __str__(self):\n","        return 'ID: {}, 상품명: {}, 개수: {}개 가격: {}원'.format(self.id, self.name, self.quantity, self.price)\n","\n","\n","    @classmethod # 일련번호 일치\n","    def get_product_by_id(cls, product_id):\n","        return cls.serial_reg.get(product_id, None)\n","    def check_stock(self, quantity): # 재고 확인\n","        return self.quantity >= quantity"],"metadata":{"id":"JzlOdBLCdD2k"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class Member:\n","    members = {}  # 회원 저장소\n","    points = {}   # 회원별 포인트 관리\n","\n","    def __init__(self, name, membership_type):\n","        self.name = name\n","        self.membership = membership_type\n","        self.id = len(Member.members) + 1\n","        Member.members[self.id] = self\n","        Member.points[self.name] = 0\n","\n","    @classmethod\n","    def add_member(cls, name, membership_type):\n","        new_member = cls(name, membership_type)\n","        print(f\"회원 '{name}'이(가) '{membership_type.name}' 등급으로 추가되었습니다.\")\n","        membership_type.owner = new_member\n","        return new_member\n","\n","    @classmethod\n","    def add_points(cls, name, points):\n","        if name in cls.points:\n","            cls.points[name] += points\n","            print(f\"'{name}' 님에게 {points}점이 적립되었습니다. 현재 포인트: {cls.points[name]}점\")\n","        else:\n","            print(f\"'{name}' 님은 등록되지 않은 회원입니다.\")\n","\n","    @classmethod\n","    def get_points(cls, name):\n","        return cls.points.get(name, \"존재하지 않는 회원입니다.\")\n","\n","    @classmethod\n","    def list_all_members(cls):\n","        if not cls.members:\n","            print(\"등록된 회원이 없습니다.\")\n","            return\n","        print(\"\\n=== 전체 회원 목록 ===\")\n","        for member_id, member in cls.members.items():\n","            points = cls.points.get(member.name, 0)\n","            print(f\"ID: {member_id}, 이름: {member.name}, 등급: {member.membership.name}, 포인트: {points}점\")\n"],"metadata":{"id":"o6tqvGgUvvz-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class Plain:\n","    def __init__(self, name=\"일반회원\", monthly_spending=\"15만 원 미만\", points_rate=0.5, coupon_count=0, coupon_value=0):\n","        self.name = name\n","        self.monthly_spending = monthly_spending\n","        self.points_rate = points_rate\n","        self.coupon_count = coupon_count\n","        self.coupon_value = coupon_value\n","        self.owner = None\n","\n","    def buy(self, product, quantity, use_coupon=False):\n","        if not isinstance(product, Product):  # 상품 타입 확인\n","            return \"바코드를 읽을 수 없습니다.\"\n","\n","        if product.quantity < quantity:\n","            return f\"{product.name}의 재고가 부족합니다.\"\n","\n","        total_price = product.price * quantity\n","\n","        if use_coupon:  # 쿠폰 사용 여부 확인\n","            if self.coupon_count > 0:\n","                discount = self.coupon_value\n","                if total_price > discount:\n","                    total_price = total_price - discount\n","                    self.coupon_count -= 1\n","                    message = f\"쿠폰을 사용하여 {discount}원 할인을 적용했습니다.\"\n","                else:\n","                    message = \"주문 금액이 할인 금액보다 작아서 쿠폰 미적용됐습니다.\"\n","            else:\n","                message = \"사용 가능한 쿠폰이 없습니다.\"\n","        else:\n","            message = \"쿠폰을 사용하지 않았습니다.\"\n","\n","        # 재고 감소\n","        product.quantity -= quantity\n","\n","        # 포인트 적립\n","        earned_points = int(total_price * (self.points_rate / 100))\n","        if self.owner:  #\n","            Member.add_points(self.owner.name, earned_points)  # 포인트 적립\n","        return f\"{product.name} {quantity}개를 구매하셨습니다. 총 가격: {total_price}원. {message} 적립 포인트: {earned_points}점\""],"metadata":{"id":"XSWqa0BOK1bq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Friends 회원 등급 클래스\n","class Friends(Plain):\n","    def __init__(self):\n","        super().__init__(name=\"프렌즈\", monthly_spending=\"15만 원 이상\", points_rate=1, coupon_count=3, coupon_value=6000)\n"],"metadata":{"id":"_ErbPUszW0T8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class Purple(Friends):\n","    def __init__(self):\n","        super().__init__()\n","        self.name = \"퍼플\"\n","        self.monthly_spending = \"100만 원 이상\"\n","        self.points_rate = 7\n","        self.coupon_count = 4\n","        self.coupon_value = 10000\n","        self.additional_benefits = \"더블 후기 적립금\"\n","        self.double_review_active = False  # 더블 후기 활성화 상태\n","\n","    def leave_double_review(self):\n","        \"\"\"더블 후기 작성\"\"\"\n","        if not self.double_review_active:\n","            self.points_rate *= 2\n","            self.double_review_active = True\n","            return f\"후기를 작성하여 적립률이 두 배로 증가했습니다! 현재 적립률: {self.points_rate}%\"\n","        return \"이미 더블 후기 적립이 활성화되었습니다.\"\n","\n","    def reset_points_rate(self):\n","        \"\"\"적립률 초기화\"\"\"\n","        if self.double_review_active:\n","            self.points_rate //= 2\n","            self.double_review_active = False\n","            return f\"적립률이 초기화되었습니다. 현재 적립률: {self.points_rate}%\"\n","        return \"적립률은 이미 기본값입니다.\""],"metadata":{"id":"1rNj5UZ2W2nD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["김경훈 = Plain()\n","김다희 = Friends()\n","오상우 = Purple()"],"metadata":{"id":"QzNLmd_9aTBT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","새우깡 = Product(\"새우깡\", 20, 1500)\n","칸쵸 = Product(\"칸쵸\", 15, 1200)\n","롯샌 = Product(\"롯샌\", 10, 3000)\n","홈런볼 = Product(\"홈런볼\", 8, 2500)\n","초코파이 = Product(\"초코파이\", 5, 4000)\n","\n","\n","김경훈 = Member.add_member(\"김경훈\", Plain())\n","김다희 = Member.add_member(\"김다희\", Friends())\n","오상우 = Member.add_member(\"오상우\", Purple())\n","\n","\n","print(\"\\n=== Plain 회원 구매 ===\")\n","print(김경훈.membership.buy(새우깡, 2))\n","print(김경훈.membership.buy(홈런볼, 1))\n","\n","\n","print(\"\\n=== Friends 회원 쿠폰 사용 구매 ===\")\n","print(김다희.membership.buy(칸쵸, 5, use_coupon=True))\n","\n","\n","print(\"\\n=== Friends 회원 쿠폰 부족 ===\")\n","print(김다희.membership.buy(롯샌, 2, use_coupon=True))\n","\n","\n","print(\"\\n=== Purple 회원 기본 적립률 구매 ===\")\n","print(오상우.membership.buy(롯샌, 3))\n","\n","print(\"\\n=== Purple 회원 더블 후기 작성 ===\")\n","print(오상우.membership.leave_double_review())\n","print(오상우.membership.buy(초코파이, 1))\n","\n","\n","print(\"\\n=== Purple 회원 적립률 초기화 ===\")\n","print(오상우.membership.reset_points_rate())\n","print(오상우.membership.buy(칸쵸, 2))\n","\n","\n","print(\"\\n=== 상품 재고 부족 ===\")\n","print(김경훈.membership.buy(초코파이, 10))\n","\n","\n","print(\"\\n=== 바코드 오류 ===\")\n","print(김경훈.membership.buy(\"잘못된상품\", 1))\n","\n","\n","print(\"\\n=== 회원 포인트 확인 ===\")\n","print(f\"김경훈 포인트: {Member.get_points('김경훈')}점\")\n","print(f\"김다희 포인트: {Member.get_points('김다희')}점\")\n","print(f\"오상우 포인트: {Member.get_points('오상우')}점\")\n","\n","print(\"\\n=== 전체 회원 목록 출력 ===\")\n","Member.list_all_members()\n","\n","\n","print(\"\\n=== ID로 상품 조회 ===\")\n","print(Product.get_product_by_id(1))\n","print(Product.get_product_by_id(10))\n","\n","\n","print(\"\\n=== 전체 상품 재고 확인 ===\")\n","for product_id, product in Product.serial_reg.items():\n","    print(product)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vu8qgg1ljKUu","executionInfo":{"status":"ok","timestamp":1736320187498,"user_tz":-540,"elapsed":4,"user":{"displayName":"김용현 (용현님)","userId":"06079441522476956341"}},"outputId":"55369155-30da-4059-f80b-c91edfb0a494"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["회원 '김경훈'이(가) '일반회원' 등급으로 추가되었습니다.\n","회원 '김다희'이(가) '프렌즈' 등급으로 추가되었습니다.\n","회원 '오상우'이(가) '퍼플' 등급으로 추가되었습니다.\n","\n","=== Plain 회원 구매 ===\n","'김경훈' 님에게 15점이 적립되었습니다. 현재 포인트: 15점\n","새우깡 2개를 구매하셨습니다. 총 가격: 3000원. 쿠폰을 사용하지 않았습니다. 적립 포인트: 15점\n","'김경훈' 님에게 12점이 적립되었습니다. 현재 포인트: 27점\n","홈런볼 1개를 구매하셨습니다. 총 가격: 2500원. 쿠폰을 사용하지 않았습니다. 적립 포인트: 12점\n","\n","=== Friends 회원 쿠폰 사용 구매 ===\n","'김다희' 님에게 60점이 적립되었습니다. 현재 포인트: 60점\n","칸쵸 5개를 구매하셨습니다. 총 가격: 6000원. 주문 금액이 할인 금액보다 작아서 쿠폰 미적용됐습니다. 적립 포인트: 60점\n","\n","=== Friends 회원 쿠폰 부족 ===\n","'김다희' 님에게 60점이 적립되었습니다. 현재 포인트: 120점\n","롯샌 2개를 구매하셨습니다. 총 가격: 6000원. 주문 금액이 할인 금액보다 작아서 쿠폰 미적용됐습니다. 적립 포인트: 60점\n","\n","=== Purple 회원 기본 적립률 구매 ===\n","'오상우' 님에게 630점이 적립되었습니다. 현재 포인트: 630점\n","롯샌 3개를 구매하셨습니다. 총 가격: 9000원. 쿠폰을 사용하지 않았습니다. 적립 포인트: 630점\n","\n","=== Purple 회원 더블 후기 작성 ===\n","후기를 작성하여 적립률이 두 배로 증가했습니다! 현재 적립률: 14%\n","'오상우' 님에게 560점이 적립되었습니다. 현재 포인트: 1190점\n","초코파이 1개를 구매하셨습니다. 총 가격: 4000원. 쿠폰을 사용하지 않았습니다. 적립 포인트: 560점\n","\n","=== Purple 회원 적립률 초기화 ===\n","적립률이 초기화되었습니다. 현재 적립률: 7%\n","'오상우' 님에게 168점이 적립되었습니다. 현재 포인트: 1358점\n","칸쵸 2개를 구매하셨습니다. 총 가격: 2400원. 쿠폰을 사용하지 않았습니다. 적립 포인트: 168점\n","\n","=== 상품 재고 부족 ===\n","초코파이의 재고가 부족합니다.\n","\n","=== 바코드 오류 ===\n","바코드를 읽을 수 없습니다.\n","\n","=== 회원 포인트 확인 ===\n","김경훈 포인트: 27점\n","김다희 포인트: 120점\n","오상우 포인트: 1358점\n","\n","=== 전체 회원 목록 출력 ===\n","\n","=== 전체 회원 목록 ===\n","ID: 1, 이름: 김경훈, 등급: 일반회원, 포인트: 27점\n","ID: 2, 이름: 김다희, 등급: 프렌즈, 포인트: 120점\n","ID: 3, 이름: 오상우, 등급: 퍼플, 포인트: 1358점\n","\n","=== ID로 상품 조회 ===\n","ID: 1, 상품명: 새우깡, 개수: 18개 가격: 1500원\n","None\n","\n","=== 전체 상품 재고 확인 ===\n","ID: 1, 상품명: 새우깡, 개수: 18개 가격: 1500원\n","ID: 2, 상품명: 칸쵸, 개수: 8개 가격: 1200원\n","ID: 3, 상품명: 롯샌, 개수: 5개 가격: 3000원\n","ID: 4, 상품명: 홈런볼, 개수: 7개 가격: 2500원\n","ID: 5, 상품명: 초코파이, 개수: 4개 가격: 4000원\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"2zAHshiBv3iZ"},"execution_count":null,"outputs":[]}]}